name: Bump and tag Version
on:
  workflow_call:
    inputs:
      bump_to:
        description: 'Poetry version (PEP 440 compliant version or bump rule)'
        required: true
        type: string
      branch:
        description: 'Branch to work on'
        required: true
        type: string
        default: "main"
    outputs:
      version:
        description: "The new version"
        value: ${{jobs.bump-version.outputs.version}}
      version_tag:
        description: "The tag of the version"
        value: ${{jobs.bump-version.outputs.version_tag}}

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.bump_version.outputs.new_version}}
      version_tag: ${{ steps.commit_tag.outputs.version_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{inputs.branch}}
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
      - name: Bump version
        id: bump_version
        run: echo "new_version=$(poetry version -s ${{ inputs.bump_to }})" >> $GITHUB_OUTPUT
      - name: Add and Commit Version
        id: commit_tag
        env:
          VERSION_TAG: v${{steps.bump_version.outputs.new_version}}
        run: |
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
          git add ./pyproject.toml
          git config --global user.name "Poetry Versioning Bot"
          git config --global user.email "versioningbot@digital-c-fiber.invalid"
          git commit -m "Change version to $VERSION_TAG" --allow-empty
          git tag $VERSION_TAG
          git push origin HEAD
          git push origin $VERSION_TAG
        shell: bash



